/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hibernate;

import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.text.ParseException;
import java.util.Collection;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;


/**
 *
 * @author IFPR
 */
public class GerenciarMonitorJIF extends javax.swing.JInternalFrame implements WindowListener {

    /**
     * Creates new form GerenciarMonitorJIF
     */
    public GerenciarMonitorJIF(JFrame parent) throws ParseException {
        gerMonitor = new GerenciarMonitor();
        monitorForm = new MonitorForm(parent, true, gerMonitor);
        monitorTableModel = new MonitorTableModel(gerMonitor);
        initComponents();
        monitorForm.addWindowListener(this);
    }

   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        nomePesquisaTF = new javax.swing.JTextField();
        pesquisarBT = new javax.swing.JButton();
        limparBT = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        novoBT = new javax.swing.JButton();
        editarBT = new javax.swing.JButton();
        removerBT = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        monitoresTB = new javax.swing.JTable();

        jButton1.setText("jButton1");

        setTitle("Gerenciador de monitores");

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(0));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Pesquisar:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Nome:");

        pesquisarBT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icones/search.png"))); // NOI18N
        pesquisarBT.setText("Pesquisar");
        pesquisarBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pesquisarBTActionPerformed(evt);
            }
        });

        limparBT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icones/eraser.png"))); // NOI18N
        limparBT.setText("Limpar");
        limparBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limparBTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nomePesquisaTF, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(pesquisarBT)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(limparBT)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {limparBT, pesquisarBT});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nomePesquisaTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pesquisarBT)
                    .addComponent(limparBT)))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(0));

        novoBT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icones/edit_add.png"))); // NOI18N
        novoBT.setText("Novo");
        novoBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novoBTActionPerformed(evt);
            }
        });

        editarBT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icones/edit.png"))); // NOI18N
        editarBT.setText("Editar");
        editarBT.setEnabled(false);
        editarBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarBTActionPerformed(evt);
            }
        });

        removerBT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icones/edit_remove.png"))); // NOI18N
        removerBT.setText("Remover");
        removerBT.setEnabled(false);
        removerBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removerBTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(novoBT)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(editarBT)
                .addGap(53, 53, 53)
                .addComponent(removerBT)
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {editarBT, novoBT, removerBT});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(novoBT)
                .addComponent(editarBT)
                .addComponent(removerBT))
        );

        monitoresTB.setBorder(javax.swing.BorderFactory.createBevelBorder(0));
        monitoresTB.setModel(monitorTableModel);
        monitoresTB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                monitoresTBMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(monitoresTB);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void novoBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novoBTActionPerformed
        monitorForm.setMonitor(new Monitor());
        monitorForm.setVisible(true);
        
    }//GEN-LAST:event_novoBTActionPerformed

    private void monitoresTBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_monitoresTBMouseClicked
        // TODO add your handling code here:
        int linha = monitoresTB.getSelectedRow();
        if(linha >= 0){ 
        
        editarBT.setEnabled(true);
        removerBT.setEnabled(true);
         }
    }//GEN-LAST:event_monitoresTBMouseClicked

    private void editarBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarBTActionPerformed
        // TODO add your handling code here:
      
        int linha = monitoresTB.getSelectedRow();
        
        if(linha >= 0){
            Monitor moni  = (Monitor) monitorTableModel.getValueAt(linha, 4);
            monitorForm.setMonitor(moni);
            monitorForm.objectToForm();
            monitorForm.setVisible(true);
        }
        
    }//GEN-LAST:event_editarBTActionPerformed

    private void pesquisarBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pesquisarBTActionPerformed
        // TODO add your handling code here:
        
        String nomePesq = nomePesquisaTF.getText().trim();
       
        if(!nomePesq.isEmpty()){
          Collection<Monitor> resultados = null;
            try {
                resultados = gerMonitor.listar(nomePesq);
            } catch (ParseException ex) {
                Logger.getLogger(GerenciarMonitorJIF.class.getName()).log(Level.SEVERE, null, ex);
            }
          monitorTableModel.setMonitores(resultados);
          monitorTableModel.popularTableData();
          monitorTableModel.fireTableDataChanged();
          } 
        
    }//GEN-LAST:event_pesquisarBTActionPerformed

    private void removerBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerBTActionPerformed
        // TODO add your handling code here:
        
        int linha = monitoresTB.getSelectedRow();
        
        if(linha >= 0){
            Monitor moni = (Monitor) monitorTableModel.getValueAt(linha, 4);
            int opcao = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir "+ "o produto "+ moni.getNome() + "?", "Confirmar exclusão?", JOptionPane.YES_NO_OPTION);
        
            if(opcao == JOptionPane.YES_OPTION){
            gerMonitor.remover(moni.getId());
                try {
                    monitorTableModel.atualizarTabela();
                } catch (ParseException ex) {
                    Logger.getLogger(GerenciarMonitorJIF.class.getName()).log(Level.SEVERE, null, ex);
                }
            editarBT.setEnabled(false);
            removerBT.setEnabled(false);
            
            }
        }
    }//GEN-LAST:event_removerBTActionPerformed

    private void limparBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limparBTActionPerformed
        // TODO add your handling code here:
        nomePesquisaTF.setText("");
        try {
            monitorTableModel.atualizarTabela();
        } catch (ParseException ex) {
            Logger.getLogger(GerenciarMonitorJIF.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_limparBTActionPerformed

    
private MonitorForm monitorForm;
private GerenciarMonitor gerMonitor;
private MonitorTableModel monitorTableModel;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton editarBT;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton limparBT;
    private javax.swing.JTable monitoresTB;
    private javax.swing.JTextField nomePesquisaTF;
    private javax.swing.JButton novoBT;
    private javax.swing.JButton pesquisarBT;
    private javax.swing.JButton removerBT;
    // End of variables declaration//GEN-END:variables

    @Override
    public void windowOpened(WindowEvent e) {
    }

    @Override
    public void windowClosing(WindowEvent e) {
       
    }

    @Override
    public void windowClosed(WindowEvent e) {
       
        try {
            monitorTableModel.atualizarTabela();
        } catch (ParseException ex) {
            Logger.getLogger(GerenciarMonitorJIF.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    @Override
    public void windowIconified(WindowEvent e) {
        
    }

    @Override
    public void windowDeiconified(WindowEvent e) {
        
    }

    @Override
    public void windowActivated(WindowEvent e) {
        
    }

    @Override
    public void windowDeactivated(WindowEvent e) {
        
    }
}
